{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactsList/ContactsList.module.css","Components/ContactsItem/ContactsItem.module.css","Components/Form/Form.module.css","Components/Form/Form.jsx","Components/ContactsItem/ContactsItem.jsx","Components/ContactsList/ContactsList.jsx","Components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","props","reset","preventDefault","onSubmit","this","className","s","form","label","input","type","pattern","title","onChange","required","btn","Component","ContactsItem","id","onDeleteContact","onClick","ContactsList","contacts","map","item","Filter","changefilter","App","filter","formSubmitHandler","data","includes","alert","contact","nanoid","deleteContact","idContact","getVisibleContacts","normalizeFilter","toLowerCase","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","console","log","setItem","stringify","visibleContacts","Form","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.186f8656.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__19jWm\",\"input\":\"Filter_input__2CEsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__3sEFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactsItem_btn__9Kz33\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1rzz1\",\"input\":\"Form_input__2o61r\",\"label\":\"Form_label__tpriE\",\"btn\":\"Form_btn__25CTF\"};","import React, { Component } from \"react\";\nimport s from \"./Form.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    const { props, reset, state } = this;\n\n    e.preventDefault();\n\n    props.onSubmit(state);\n\n    reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleChange } = this;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} className={s.form}>\n          <label className={s.label}>\n            Name\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              value={name}\n              onChange={handleChange}\n              required\n            />\n          </label>\n\n          <label className={s.label}>\n            Number\n            <input\n              className={s.input}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              value={number}\n              onChange={handleChange}\n              required\n            />\n          </label>\n          <button type=\"submit\" className={s.btn}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport s from \"./ContactsItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactsItem = ({ name, number, id, onDeleteContact }) => {\n  return (\n    <>\n      <p>{name + \": \" + number}</p>\n      <button\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n        className={s.btn}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactsItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsItem;\n","import React from \"react\";\nimport s from \"./ContactsList.module.css\";\nimport ContactsItem from \"../ContactsItem/ContactsItem\";\nimport PropTypes from \"prop-types\";\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <>\n      <ul>\n        {contacts.map(({ name, number, id }) => (\n          <li key={id} className={s.item}>\n            <ContactsItem\n              name={name}\n              number={number}\n              id={id}\n              onDeleteContact={onDeleteContact}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from \"react\";\nimport s from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ value, changefilter }) => {\n  return (\n    <>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          onChange={changefilter}\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  changefilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport Form from \"./Components/Form/Form\";\nimport ContactsList from \"./Components/ContactsList/ContactsList\";\nimport Filter from \"./Components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  formSubmitHandler = (data) => {\n    const isNewName = this.state.contacts\n      .map(({ name }) => name)\n      .includes(data.name);\n\n    if (isNewName) {\n      alert(`${data.name} is already in contacts `);\n    } else {\n      const contact = { id: nanoid(), ...data };\n\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = (idContact) => {\n    this.setState(({ contacts }) => {\n      return {\n        contacts: contacts.filter(({ id }) => id !== idContact),\n      };\n    });\n  };\n\n  changefilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    console.log(prevProps);\n    console.log(prevState);\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n\n    const {\n      formSubmitHandler,\n      deleteContact,\n      changefilter,\n      getVisibleContacts,\n    } = this;\n\n    const visibleContacts = getVisibleContacts();\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <Form onSubmit={formSubmitHandler} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} changefilter={changefilter} />\n        <ContactsList\n          contacts={visibleContacts}\n          onDeleteContact={deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}